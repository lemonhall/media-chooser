// Generated by CoffeeScript 1.3.3

String.prototype.fill = function(width, height) {
  if (/media\.getchute\.com/.test(this)) {
    return "" + this + "/" + width + "x" + height;
  } else {
    return this;
  }
};

String.prototype.fit = function(width, height) {
  if (/media\.getchute\.com/.test(this)) {
    return "" + this + "/fit/" + width + "x" + height;
  } else {
    return this;
  }
};

String.prototype.width = function(width) {
  if (/media\.getchute\.com/.test(this)) {
    return "" + this + "/w/" + width;
  } else {
    return this;
  }
};

String.prototype.height = function(height) {
  if (/media\.getchute\.com/.test(this)) {
    return "" + this + "/h/" + height;
  } else {
    return this;
  }
};

window.Chute = (function() {

  function Chute() {}

  Chute.setApp = function(app) {
    this.app = app;
  };

  Chute.setChuteIdentifier = function(identifier) {
    this.identifier = identifier;
  };

  Chute.choose = function(params, callback) {
    var browseButton, id, widget;
    if ('function' === typeof params) {
      callback = params;
      params = {};
    }
    params.app = this.app;
    params.identifier = "chute-identifier-" + this.identifier;
    params.chute_id = this.identifier;
    if (!(params.mode != null)) {
      params.mode = 'collector';
    }
    if (!(params.popup != null)) {
      params.popup = false;
    }
    params.file_types = (function() {
      switch (params.allow) {
        case 'images':
        case 'image':
        case 'picture':
        case 'pictures':
          return 1;
        case 'video':
        case 'videos':
          return 2;
        default:
          return 0;
      }
    })();
    params.file_limit = params.limit || 0;
    params.picker_version = "v2";
    params.onSelectionComplete = function(element, data) {
      if (callback) {
        return callback(data);
      }
    };
    id = parseInt(Math.random() * 1000);
    widget = $("<div id=\"chute-" + id + "\"></div>");
    widget.appendTo('body');
    params.widget_id = id;
    chute("#chute-" + id, params);
    browseButton = widget.find('a.chute-browseButton');
    if (params.popup === false && params.mode === 'collector') {
      browseButton.hide();
    }
    return setTimeout(function() {
      return browseButton.click();
    }, 500);
  };

  return Chute;

})();
